{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","e","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","Fish","handleClick","addToOrder","details","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","setItem","stringify","removeBinding","StorePicker","myInput","goToStore","storeName","history","push","required","defaultValue","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.fbf133e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => (\r\n        <header className=\"top\">\r\n        <h1>\r\n            Catch\r\n            <span className=\"ofThe\">\r\n                <span className=\"of\">Of</span>\r\n                <span className=\"the\">The</span>\r\n            </span>\r\n            Day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n            <span>{props.tagline}</span>\r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        removeFromOrder: PropTypes.func,\r\n\r\n    }\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key,\r\n            timeout: { enter: 500, exit: 500 }\r\n        }\r\n        // make sure fish is loaded first before we sync\r\n        if (!fish) return null;\r\n\r\n        if(!isAvailable) {\r\n            return ( \r\n            <CSSTransition {...transitionOptions}>\r\n            <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\r\n            </CSSTransition>\r\n            )\r\n        }\r\n        return (\r\n            <CSSTransition {...transitionOptions}>\r\n            <li key={key}>\r\n                <span>\r\n                    <TransitionGroup component=\"span\" className=\"count\">\r\n                        <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\r\n                            <span>{count}</span>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                    lbs. {fish.name} {formatPrice(count * fish.price)}\r\n                    <button onClick={() => this.props.removeFromOrder(key)}>\r\n                        &times;\r\n                    </button>\r\n                </span>\r\n            </li>\r\n            </CSSTransition>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = (event) => {\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        };\r\n        this.props.addFish(fish);\r\n        // refresh the form\r\n        event.currentTarget.reset();\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" type=\"text\" ref={this.descRef} placeholder=\"Desc\" />\r\n                <input name=\"image\" type=\"text\" ref={this.imageRef} placeholder=\"Image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number,\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n    handleChange = (e) => {\r\n        console.log(e.currentTarget.value);\r\n        // update that fish\r\n        // 1. Take a copy of the current fish\r\n        const updatedFish = { \r\n            ...this.props.fish,\r\n            [e.currentTarget.name]: e.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name}/>\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={formatPrice(this.props.fish.price)}/>\r\n                <select type=\"text\" name=\"status\"onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea type=\"text\" name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}/>\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image}/>\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\r\n            Log in with Github\r\n        </button>\r\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\r\n            Log in with Twitter\r\n        </button>\r\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\r\n            Log in with Facebook\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAcxflct42otJ4cdfMO1KX9mEKAOdRpfiI\",\r\n    authDomain: \"catch-of-the-day-e0e27.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-e0e27-default-rtdb.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from 'firebase';\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func,\r\n    };\r\n\r\n    state = {\r\n        uid: null,\r\n        owner: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.authHandler({ user })\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        // 1. look up the current store in the firebase database\r\n        const store = await base.fetch(this.props.storeId, { context: this });\r\n        console.log(store);\r\n        // 2. claim it if there is no owner\r\n        if (!store.owner) {\r\n            // save it as our own\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n        // 3. Set the state of the inventory component to reflect the current user\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n        console.log(authData);\r\n    }\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        console.log('Logging out');\r\n        await firebase.auth().signOut();\r\n        this.setState({ uid: null })\r\n    }\r\n\r\n    render() {\r\n        const logout = <button onClick={this.logout}>Log out!</button>\r\n        // 1. check if they are logged in\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate}/>;\r\n        }\r\n        // 2. Check if they are the owner of the store\r\n        if (this.state.uid !== this.state.owner) {\r\n            return <div>\r\n                <p>Sorry, you are not the owner!</p>\r\n                {logout}\r\n            </div>\r\n        }\r\n        // 3. If they are the owner, just render the inventory\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes)\r\n                .map(key => (\r\n                    <EditFishForm \r\n                        key={key} \r\n                        index={key} \r\n                        fish={this.props.fishes[key]} \r\n                        updateFish={this.props.updateFish}\r\n                        deleteFish={this.props.deleteFish}\r\n                    />\r\n                ))}\r\n                <AddFishForm addFish={this.props.addFish}/>\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number,\r\n        }),\r\n        addToOrder: PropTypes.func,\r\n    }\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n    render() {\r\n        const { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={this.handleClick}>\r\n                    {isAvailable ? \"Add to Order\" : \"Sold Out!\"}\r\n                </button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport Fish from './Fish';\r\nimport sampleFishes from '../../src/sample-fishes';\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {},\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    componentDidMount() {\r\n        const localStorageRef = localStorage.getItem(this.props.match.params.storeId);\r\n        if(localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef) });\r\n        }\r\n        this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\r\n            context: this,\r\n            state: \"fishes\"\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order)) \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n\r\n    addFish = (fish) => {\r\n        // 1. Take a copy of the existing state\r\n        const fishes = {...this.state.fishes};\r\n        // 2. Add new fish to fishes variable\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // 3. Set the new fishes object to state\r\n        this.setState({\r\n            fishes\r\n        });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        // 1. take a copy of the current state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. Update that state\r\n        fishes[key] = updatedFish;\r\n        // 3. Set that to state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        // 1. take a copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. update the fish\r\n        fishes[key] = null;\r\n        // 3. update state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({ fishes: sampleFishes });\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n        // 1. take a copy of state\r\n        const order = { ...this.state.order };\r\n        // 2. either add to the order, or increment the number in order\r\n        order[key] = order[key] + 1 || 1;\r\n        // 3. Call setState to update our state object\r\n        this.setState({ order });\r\n    }\r\n\r\n    removeFromOrder = (key) => {\r\n        // 1. take a copy of state\r\n        const order = { ...this.state.order };\r\n        // 2. remove from order or decrement number in order\r\n            // if more than one of item, decrement\r\n            if (order[key] === 1) {\r\n                delete(order[key])\r\n            } else {\r\n                order[key] = order[key] -1\r\n            }\r\n\r\n        // 3. Call setState to update the state object\r\n        this.setState({ order });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                   <Header tagline=\"Fresh Seafood Market\" /> \r\n                   <ul className=\"fishes\">\r\n                    {Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)}\r\n                   </ul>\r\n                </div>\r\n                <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order} \r\n                    removeFromOrder={this.removeFromOrder}\r\n                />\r\n                <Inventory \r\n                    addFish={this.addFish}\r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    storeId={this.props.match.params.storeId}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n    myInput = React.createRef();\r\n    static propTypes = {\r\n        history: PropTypes.object,\r\n    }\r\n\r\n    goToStore = event => {\r\n        // Stop the form from submitting\r\n        event.preventDefault();\r\n        // Get the text from that input\r\n        const storeName = this.myInput.current.value;\r\n        console.log(this.myInput.current.value);\r\n        // Change the page to /store/whatever they entered\r\n        this.props.history.push(`/store/${storeName}`)\r\n    }\r\n    render() {\r\n        return (\r\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n            <h2>Please enter a store</h2>\r\n            <input \r\n            type=\"text\" \r\n            ref={this.myInput}\r\n            required placeholder=\"Store Name\" \r\n            defaultValue={getFunName()} \r\n            />\r\n            <button type=\"submit\">Visit Store</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\nexport default StorePicker;\r\n\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from \"./StorePicker\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from \"./components/Router\"\r\nimport \"./css/style.css\";\r\n\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}